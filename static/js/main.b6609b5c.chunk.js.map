{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Header/index.js","components/Footer/index.js","App.js","index.js"],"names":["boxingCard","props","className","alt","name","src","image","onClick","cardClick","id","Wrapper","children","Header","headerText","score","topScore","Footer","App","state","boxing","cardCick","cardId","console","log","cardArr","i","length","clicked","setState","update","$set","mixCards","arr","j","Math","floor","random","temp","reactCard","this","map","card","Card","key","mixCard","React","Component","ReactDOM","render","document","getElementById"],"mappings":"g0FAiBeA,MAdf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBACEC,IAAKF,EAAMG,KACXC,IAAKJ,EAAMK,MACXC,QAAS,kBAAMN,EAAMO,UAAUP,EAAMQ,U,MCHhCC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCW1BC,MAZf,SAAgBX,GACd,OACE,yBAAKC,UAAU,UACb,uBAAGO,GAAG,cAAN,sBACA,uBAAGA,GAAG,gBAAgBR,EAAMY,YAC5B,uBAAGJ,GAAG,eAAN,UACUR,EAAMa,MADhB,iBACqCb,EAAMc,Y,MCElCC,MARf,WACE,OACE,yBAAKd,UAAU,UACb,uBAAGO,GAAG,cAAN,wB,uBCqFSQ,G,iNAjFbC,MAAQ,CACNH,SAAU,EACVD,MAAO,EACPD,WAAY,gCACZM,U,EAGFC,SAAW,SAAAC,GACTC,QAAQC,IAAIF,GAGZ,IAFA,IAAIG,EAAU,EAAKN,MAAMC,OAEhBM,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAC9BJ,IAAWG,EAAQC,GAAGhB,MACG,IAAvBe,EAAQC,GAAGE,QACb,EAAKC,SAAS,CACZd,MAAO,EAAKI,MAAMJ,MAAQ,EAC1BD,WAAY,WACZM,OAAQU,IAAO,EAAKX,MAAMC,OAAZ,eACXM,EAAI,CAAEE,QAAS,CAAEG,MAAM,SAMxB,EAAKZ,MAAMJ,MAAQ,EAAKI,MAAMH,UAChC,EAAKa,SAAS,CACZb,SAAU,EAAKG,MAAMJ,MACrBA,MAAO,EACPD,WAAY,wBACZM,WAIA,EAAKD,MAAMJ,OAAS,EAAKI,MAAMH,UACjC,EAAKa,SAAS,CACZd,MAAO,EACPD,WAAY,wBACZM,c,EAQZY,SAAW,SAAAC,GAET,IADA,IAAIP,EAAIO,EAAIN,OAAS,EACdD,EAAI,EAAGA,IAAK,CACjB,IAAMQ,EAAIC,KAAKC,MAAMD,KAAKE,UAAYX,EAAI,IACpCY,EAAOL,EAAIP,GACjBO,EAAIP,GAAKO,EAAIC,GACbD,EAAIC,GAAKI,EAEX,OAAOL,G,wEAEC,IAAD,OACHM,EAAYC,KAAKrB,MAAMC,OAAOqB,KAAI,SAAAC,GAAI,OACxC,kBAACC,EAAD,CACEtC,KAAMqC,EAAKrC,KACXE,MAAOmC,EAAKnC,MACZqC,IAAKF,EAAKhC,GACVA,GAAIgC,EAAKhC,GACTF,QAAS,EAAKC,eAIdoC,EAAUL,KAAKR,SAASO,GAE5B,OACE,6BACE,kBAAC,EAAD,CACExB,MAAOyB,KAAKrB,MAAMJ,MAClBC,SAAUwB,KAAKrB,MAAMH,SACrBF,WAAY0B,KAAKrB,MAAML,aAEzB,kBAAC,EAAD,KAAU+B,GACV,kBAAC,EAAD,W,GA7EUC,IAAMC,YCJxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b6609b5c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction boxingCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img\r\n          alt={props.name}\r\n          src={props.image}\r\n          onClick={() => props.cardClick(props.id)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default boxingCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"header\">\r\n      <p id=\"headerLeft\">React Clicky Game </p>\r\n      <p id=\"headerMiddle\">{props.headerText}</p>\r\n      <p id=\"headerRight\">\r\n        Score: {props.score} | Top Score: {props.topScore}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p id=\"footerLeft\">React Clicky Game </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport boxing from \"./boxing.json\";\nimport update from \"immutability-helper\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    topScore: 0,\n    score: 0,\n    headerText: \"Select a new image each time.\",\n    boxing\n  };\n\n  cardCick = cardId => {\n    console.log(cardId);\n    let cardArr = this.state.boxing;\n\n    for (let i = 0; i < cardArr.length; i++) {\n      if (cardId === cardArr[i].id) {\n        if (cardArr[i].clicked === false) {\n          this.setState({\n            score: this.state.score + 1,\n            headerText: \"Correct!\",\n            boxing: update(this.state.boxing, {\n              [i]: { clicked: { $set: true } }\n            })\n            //GLEN COME BACK TO THIS LINE OF CODE FOR THE LOVE OF GOD\n          });\n        } else {\n          //New top Score\n          if (this.state.score > this.state.topScore) {\n            this.setState({\n              topScore: this.state.score,\n              score: 0,\n              headerText: \"Incorrect, try again.\",\n              boxing\n            });\n          }\n          //Did not beat top score\n          if (this.state.score <= this.state.topScore) {\n            this.setState({\n              score: 0,\n              headerText: \"Incorrect, try again.\",\n              boxing\n            });\n          }\n        }\n      }\n    }\n  };\n\n  mixCards = arr => {\n    let i = arr.length - 1;\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n    return arr;\n  };\n  render() {\n    let reactCard = this.state.boxing.map(card => (\n      <Card\n        name={card.name}\n        image={card.image}\n        key={card.id}\n        id={card.id}\n        onClick={this.cardClick}\n      />\n    ));\n\n    let mixCard = this.mixCards(reactCard);\n\n    return (\n      <div>\n        <Header\n          score={this.state.score}\n          topScore={this.state.topScore}\n          headerText={this.state.headerText}\n        />\n        <Wrapper>{mixCard}</Wrapper>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}